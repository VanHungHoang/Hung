{"version":3,"file":"0.js","sources":["webpack:///./node_modules/css-loader/lib/css-base.js","webpack:///./Client/backend/app/setting/setting.module.ts","webpack:///./Client/backend/app/setting/setting.component.ts","webpack:///./Client/backend/app/setting/general/general-setting.component.ts","webpack:///./Client/backend/app/setting/setting.routes.ts","webpack:///./Client/backend/app/setting/setting.component.html","webpack:///./Client/backend/app/setting/general/general-setting.component.html","webpack:///./Client/backend/app/setting/general/general-setting.component.scss"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader/lib/css-base.js\n// module id = 1\n// module chunks = 0","import { NgModule } from '@angular/core';\r\n\r\nimport { SharedModule } from '../shared/shared.module';\r\n\r\nimport { settingRouting } from './setting.routes';\r\nimport { SettingComponent } from './setting.component';\r\nimport { GeneralSettingComponent } from './general/general-setting.component';\r\n\r\n@NgModule({\r\n    imports: [ SharedModule, settingRouting ],\r\n    declarations: [\r\n        SettingComponent,\r\n        GeneralSettingComponent\r\n    ]\r\n})\r\n\r\nexport class SettingModule {\r\n    \r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./Client/backend/app/setting/setting.module.ts","// The home page of setting page\r\nimport { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-child-setting',\r\n    template: require('./setting.component.html')\r\n})\r\n\r\nexport class SettingComponent {\r\n    constructor() {}\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./Client/backend/app/setting/setting.component.ts","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    template: require('./general-setting.component.html'),\r\n    styles: [ require('./general-setting.component.scss') ]\r\n})\r\n\r\nexport class GeneralSettingComponent {\r\n    constructor(){}\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./Client/backend/app/setting/general/general-setting.component.ts","import { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { SettingComponent } from './setting.component';\r\nimport { GeneralSettingComponent } from './general/general-setting.component';\r\n\r\n/**\r\n * The routes for the setting module (setting page)\r\n */\r\nconst settingRoutes: Routes = [\r\n    { \r\n        path: 'setting', \r\n        component: SettingComponent,\r\n        children: [\r\n            // Active general tab by default\r\n            { path: '', redirectTo: 'general', pathMatch: 'full' },\r\n            { path: 'general', component: GeneralSettingComponent }\r\n        ]\r\n    }\r\n];\r\n\r\nexport const settingRouting = RouterModule.forChild(settingRoutes);\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./Client/backend/app/setting/setting.routes.ts","module.exports = \"<h1>This is homepage of Setting page</h1>\\r\\n<!-- Nav for setting -->\\r\\n<div class=\\\"tab-panel\\\">\\r\\n    <a routerLinkActive=\\\"active\\\" [routerLink]=\\\"['general']\\\">General</a>\\r\\n</div>\\r\\n<div class=\\\"tab-container\\\">\\r\\n    <!-- Routing placeholder for Setting module -->\\r\\n    <router-outlet></router-outlet>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./Client/backend/app/setting/setting.component.html\n// module id = 535\n// module chunks = 0","module.exports = \"<h2>General setting content</h2>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./Client/backend/app/setting/general/general-setting.component.html\n// module id = 536\n// module chunks = 0","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./Client/backend/app/setting/general/general-setting.component.scss\n// module id = 537\n// module chunks = 0"],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC3EA;AAEA;AAEA;AACA;AACA;AAUA;AAAA;AAEA;AAFA;AARA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAFA;;;;;;;;;;;;;;;;;;;;AChBA;AACA;AAOA;AACA;AAAA;AADA;AALA;AACA;AACA;AACA;;AAEA;AAEA;AAAA;AAFA;;;;;;;;;;;;;;;;;;;;ACRA;AAOA;AACA;AAAA;AADA;AALA;AACA;AACA;AACA;;AAEA;AAEA;AAAA;AAFA;;;;;;;;;;;ACPA;AAEA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;ACpBA;;;;;;;ACAA;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}